/********************************************************************
 *******************************************************************
________                        _____     ________                    
__  ___/______ _________ _________  /_    __  ___/____________________
_____ \__  __ `__ \  __ `/_  ___/  __/    _____ \_  ___/_  ___/_  ___/
____/ /_  / / / / / /_/ /_  /   / /_      ____/ // /__ _(__  )_(__  ) 
/____/ /_/ /_/ /_/\__,_/ /_/    \__/      /____/ \___/ /____/ /____/ 
         
          The best time-saver scss tool for your day to day life  
                                                                      
               Tools Used : 100% powerful SASS language
                copyright : Â© 2021 Suresh.P
                 License  : Code released by MIT License

*******************************************************************
********************************************************************/

@use "sass:math";
@use "sass:list";
@use "sass:map";
@use "sass:string";
@use "sass:color";
@use "sass:meta";

 /* Convert  CMYK to rgb */
 @function cmyk($c,$m,$y,$k) {
    @return rgb(math.round(255 * (1 - math.div($c,100)) * (1 - math.div($k,100))),
             math.round(255 * (1 - math.div($m,100)) * (1 - math.div($k,100))),
             math.round(255 * (1 - math.div($y,100)) * (1 - math.div($k,100))));
 }

 /* Sixhexa should be 6 characters only*/
@function sixhexa($hexasix) {
    @if str-length(smarty) > str-length($hexasix) {
        @return ##{to-upper-case($hexasix)};
    }
}

/* Typescale pixels */
@mixin typescale-px($base,$d,$n) {
    $ratio: math.div($d,$n);
     .xl {
        font-size: math.div($base,$base) * $ratio * $ratio * $ratio * $ratio+rem;
    }
      .lg {
        font-size: math.div($base,$base) * $ratio * $ratio * $ratio+rem; 
    }
        .md {
        font-size: math.div($base,$base) * $ratio * $ratio+rem; 
    }
        .sm {
        font-size: math.div($base,$base) * $ratio+rem;
    }
        .paragraph {
        font-size: math.div($base,$base)+rem; 
    }
      .sub-text {
        font-size: math.abs(math.div($base,$base) - 2)+rem; 
    }
    .buttons {
        font-size: math.div(math.div($base,$base),$ratio)+rem;
    }
    .captions {
        font-size:  math.div(math.div(math.div($base,$base),$ratio),$ratio)+rem;
    }
}

 /*  Vendor specfied - prefix */
@mixin vendors($property,$value,$c) {
   $vendor: (webkit moz ms);
   @for $_ from $c through $c {
      #{'-'+#{nth($vendor,$_)}+'-'+#{$property}}: $value;
   }
}

/* Monochromatic-color */
  @mixin monochromatic-color($cors,$hs,$controlone,$controltwo) {
     $hs: $hs;
     $cor: (color background);
     @for $_ from $controlone through $controltwo  {
     #{nth($cor,$cors)}: hsl($hs,100%,50% + $_);
 }
}

 /*  Triadic-color */
@mixin triadic-color($cors,$hs) {
     $hs: $hs;  
     $cs: $hs + 120;
     $c: $hs + 240; 
     $cor: (color background);
     #{nth($cor,$cors)}: hsl($hs,100%,50%);
     #{nth($cor,$cors)}: hsl($cs,100%,50%);
     #{nth($cor,$cors)}: hsl($c,100%,50%);
}

/*  Tetradic-color */
@mixin tetradic-color($cors,$hs,$h) {
     $hs: $hs;
     $h: $hs + 90; 
     $cs: $h + 90; 
     $c: $cs + 90; 
     $cor: (color background);
     #{nth($cor,$cors)}: hsl($hs,100%,50%);
     #{nth($cor,$cors)}: hsl($h,100%,50%);
     #{nth($cor,$cors)}: hsl($cs,100%,50%);
     #{nth($cor,$cors)}: hsl($c,100%,50%);
}

/*  analogous-color */
@mixin analogous-color($cors,$hs) {
     $hs: $hs; // 0
     $cs: $hs + 30;
     $c: $cs + 300;
     $cor: (color background);
     #{nth($cor,$cors)}: hsl($hs,100%,50%);
     #{nth($cor,$cors)}: hsl($cs,100%,50%);
     #{nth($cor,$cors)}: hsl($c,100%,50%);
}